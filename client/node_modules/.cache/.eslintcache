[{"C:\\Users\\MaksD\\fullserverDUR\\client\\src\\index.js":"1","C:\\Users\\MaksD\\fullserverDUR\\client\\src\\reportWebVitals.js":"2","C:\\Users\\MaksD\\fullserverDUR\\client\\src\\App.js":"3","C:\\Users\\MaksD\\fullserverDUR\\client\\src\\app.js":"4","C:\\Users\\MaksD\\fullserverDUR\\client\\src\\components\\Register.js":"5","C:\\Users\\MaksD\\fullserverDUR\\client\\src\\components\\Home.js":"6","C:\\Users\\MaksD\\fullserverDUR\\client\\src\\components\\Login.js":"7","C:\\Users\\MaksD\\fullserverDUR\\client\\src\\components\\Replies.js":"8","C:\\Users\\MaksD\\fullserverDUR\\client\\src\\components\\RegisterValidation.js":"9","C:\\Users\\MaksD\\fullserverDUR\\client\\src\\components\\LoginValidation.js":"10","C:\\Users\\MaksD\\fullserverDUR\\client\\src\\components\\utils\\Likes.js":"11","C:\\Users\\MaksD\\fullserverDUR\\client\\src\\components\\utils\\Comments.js":"12"},{"size":323,"mtime":1685034994316,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1685032396826,"results":"15","hashOfConfig":"14"},{"size":528,"mtime":1685033106518,"results":"16","hashOfConfig":"14"},{"size":729,"mtime":1685034995137,"results":"17","hashOfConfig":"14"},{"size":3449,"mtime":1685311088560,"results":"18","hashOfConfig":"14"},{"size":5410,"mtime":1685482950952,"results":"19","hashOfConfig":"14"},{"size":3312,"mtime":1685367560063,"results":"20","hashOfConfig":"14"},{"size":5043,"mtime":1685483238023,"results":"21","hashOfConfig":"14"},{"size":911,"mtime":1685309964842,"results":"22","hashOfConfig":"14"},{"size":756,"mtime":1685050648501,"results":"23","hashOfConfig":"14"},{"size":1951,"mtime":1685459182060,"results":"24","hashOfConfig":"14"},{"size":1298,"mtime":1685374048526,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"u4jcxo",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MaksD\\fullserverDUR\\client\\src\\index.js",[],[],[],"C:\\Users\\MaksD\\fullserverDUR\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\MaksD\\fullserverDUR\\client\\src\\App.js",[],[],"C:\\Users\\MaksD\\fullserverDUR\\client\\src\\app.js",[],[],"C:\\Users\\MaksD\\fullserverDUR\\client\\src\\components\\Register.js",["68"],[],"import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\"\r\nimport Validation from './RegisterValidation'\r\nimport axios from 'axios'\r\nimport logo from './images/logotranssmall.png'\r\nimport bcrypt from 'bcryptjs'\r\n\r\n\r\nconst Register = () => {\r\n    const [values,setValues] =useState({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n        \r\n    })\r\n    const navigate =useNavigate();\r\n    const [errors, setErrors] = useState({})\r\n    const handleInput = (e) => {\r\n        setValues(prev => ({...prev, [e.target.name]: [e.target.value]}))\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        \r\n        e.preventDefault();\r\n        const errors = Validation(values);\r\n        setErrors(errors);\r\n        \r\n        if(errors.name === \"\" && errors.password === \"\" && errors.email === \"\"){\r\n            try {\r\n                const hashedPassword = await bcrypt.hash(values.password.toString(), '$2a$10$CwTycUXWue0Thq9StjUM0u');\r\n                values.password = hashedPassword;\r\n                axios.post('http://localhost:8081/signup', values)\r\n                  .then(res => {\r\n                    navigate('/');\r\n                  })\r\n                  .catch(err => console.log(err));\r\n              } catch (error) {\r\n                console.log(error);\r\n              }\r\n        }\r\n    };\r\n\r\n    const gohome = () => {\r\n        navigate('/dashboard');\r\n    };\r\n    \r\n    return (\r\n        <main className='register'>\r\n            <nav>\r\n            <img src={logo} className=\"logo\" onClick={gohome}></img>\r\n            </nav>\r\n            <div className=\"space\"></div>\r\n            <div className='registerf'>\r\n                \r\n            <h1 className='registerTitle'>Create an account</h1>\r\n            <form className='registerForm' onSubmit={handleSubmit}>\r\n                <label htmlFor='username'>Username</label>\r\n                <input\r\n                placeholder=\"YourUsername\" \r\n                    type='text'\r\n                    name='name'\r\n                    id='name'\r\n                    onChange={handleInput}\r\n                />\r\n                {errors.name && <span>{errors.name}</span>}\r\n                <br></br>\r\n                <div className=\"break\"></div>\r\n                <label htmlFor='email'>Email Address</label>\r\n                <input\r\n                    placeholder=\"examplemail@gmail.com\"\r\n                    type='text'\r\n                    name='email'\r\n                    id='email'\r\n                    onChange={handleInput}\r\n                />\r\n                {errors.email && <span>{errors.email}</span>}\r\n                <br></br>\r\n                <div className=\"break\"></div>\r\n                <label htmlFor='password'>Password</label>\r\n                <input\r\n                    placeholder=\"*********\"\r\n                    type='password'\r\n                    name='password'\r\n                    id='password'\r\n                    onChange={handleInput}\r\n                    \r\n                />\r\n                {errors.password && <span>{errors.password}</span>}\r\n                <br></br>\r\n                <div className=\"break\"></div>\r\n                <button type='submit' className='registerBtn'>REGISTER</button>\r\n                <p>\r\n                    Have an account? <Link to='/'>Sign in</Link>\r\n                </p>\r\n            </form>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\MaksD\\fullserverDUR\\client\\src\\components\\Home.js",["69","70"],[],"import React, {useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport logo from './images/logotranssmall.png';\r\nimport Likes from './utils/Likes.js'\r\nimport Comments from './utils/Comments.js'\r\n\r\nconst Home = () => {\r\n    const [thread, setThread] = useState({\r\n        title: '',\r\n        description: ''\r\n    });\r\n    const [threadList, setThreadList] = useState([]);\r\n    const navigate =useNavigate();\r\n    const username = localStorage.getItem(\"_name\");\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8081/api/all/threads\")\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            setThreadList(data.threads);   \r\n        })\r\n        .catch((err) => console.error(err));\r\n\r\n    }, [navigate]);\r\n\r\n    const createThread = () => {\r\n        fetch(\"http://localhost:8081/api/create/thread\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                thread,\r\n                userId: localStorage.getItem(\"_id\"),\r\n                originator: username\r\n            }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                alert(data.message);\r\n                setThreadList(data.threads);\r\n            })\r\n            .catch((err) => console.error(err));\r\n    };\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(localStorage.getItem(\"_id\")===null){\r\n            navigate('/')\r\n        }\r\n        else{\r\n        createThread();\r\n        setThread({\r\n            title:'',\r\n            description:''\r\n        })\r\n        }\r\n        \r\n    };\r\n    \r\n    const signOut = () => {\r\n        localStorage.removeItem(\"_id\");\r\n        localStorage.removeItem(\"_name\")\r\n        window.location.reload(true);\r\n    };\r\n    const gotolog = () => {\r\n        navigate('/');\r\n    };\r\n    const gotosign = () => {\r\n        navigate('/register');\r\n    };\r\n\r\n    \r\n\r\n    const handleInput = (e) => {\r\n        setThread(prev => ({...prev, [e.target.name]: [e.target.value]}))\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <main className='home'>\r\n                <nav>\r\n                    <img src={logo} className=\"logo\"></img>\r\n                    <div className=\"navbuttons\">\r\n                    {localStorage.getItem(\"_id\") !== null && \r\n                        <button className=\"btn\" onClick={signOut}>\r\n                            SIGN OUT\r\n                        </button>\r\n                        \r\n                    }\r\n                    {username && <h1>{username}</h1>}\r\n                    {localStorage.getItem(\"_id\") === null && \r\n                        <button className=\"btn\" onClick={gotolog}>\r\n                            LOG IN\r\n                        </button>\r\n                    }\r\n                    {localStorage.getItem(\"_id\") === null && \r\n                        <button className=\"btn\" onClick={gotosign}>\r\n                            SIGN IN\r\n                        </button>\r\n                    }</div>\r\n                </nav>\r\n                <div id=\"work\">\r\n                <form className='homeForm' onSubmit={handleSubmit}>\r\n                <h2 className='homeTitle'>Create a Thread</h2>\r\n                    <div className='home__container'>\r\n                        <label htmlFor='thread'>Title</label>\r\n                        <input\r\n                            type='text'\r\n                            name='title'\r\n                            id='title'\r\n                            value={thread.title}\r\n                            required\r\n                            onChange={handleInput}\r\n                        />\r\n                        <label htmlFor='thread'>Description</label>\r\n                        <input\r\n                            type='text'\r\n                            name='description'\r\n                            id='description'\r\n                            value={thread.description}\r\n                            required\r\n                            onChange={handleInput}\r\n                        />\r\n                    </div>\r\n                    <button className='homeBtn'>CREATE THREAD</button>\r\n                </form>\r\n                <div className=\"Content\">\r\n                <h1>Latest Threads:</h1>\r\n                <div className=\"spacesmall\"></div>\r\n                <div className='threadCont'>\r\n                {threadList.map((thread) => (\r\n                    <div className='threadItem' key={thread.id}>\r\n                        <div className=\"threadText\">\r\n                        <h1>{thread.title}</h1>\r\n                        <p>{thread.description}</p></div>\r\n                        <div className='reactCont'>\r\n                            <Likes numberOfLikes={thread.likes.length} threadId={thread.id} />\r\n                            <Comments\r\n                                numberOfComments={thread.replies.length}\r\n                                threadId={thread.id}\r\n                                title={thread.title}\r\n                            />\r\n                        </div>\r\n                        <div className=\"underline\"></div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            </div>\r\n            </div>\r\n            </main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","C:\\Users\\MaksD\\fullserverDUR\\client\\src\\components\\Login.js",["71"],[],"import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Validation from \"./LoginValidation\";\r\nimport axios from 'axios';\r\nimport logo from './images/logotranssmall.png';\r\nimport bcrypt from 'bcryptjs';\r\n\r\n\r\n\r\nexport const Login = () => {\r\n    const [values,setValues] =useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const navigate =useNavigate();\r\n    const [errors, setErrors] = useState({})\r\n    const handleInput = (e) => {\r\n        setValues(prev => ({...prev, [e.target.name]: [e.target.value]}))\r\n    }\r\n    \r\n    const gohome = () => {\r\n        navigate('/dashboard');\r\n    };\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const newErrors = Validation(values);\r\n        setErrors(newErrors);\r\n\r\n        if(newErrors.password === \"\" && newErrors.email === \"\"){\r\n            try {\r\n            const hashedPassword = await bcrypt.hash(values.password.toString(), '$2a$10$CwTycUXWue0Thq9StjUM0u');\r\n            values.password = hashedPassword;\r\n            axios.post('http://localhost:8081/login', values)\r\n            .then(res => {\r\n                    errors.password=res.data.errorMessage;\r\n                    if(res.data.errorMessage ==='Success'){\r\n                        localStorage.setItem(\"_id\",res.data.id);\r\n                        localStorage.setItem(\"_name\",res.data.name);\r\n                        navigate('/dashboard');\r\n                    }\r\n                    else{\r\n                        console.log(res.data.errorMessage);\r\n                    }\r\n            })\r\n            .catch(err => console.log(err));\r\n            }   catch (error) {\r\n            console.log(error);\r\n          }\r\n\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <main className='login'>\r\n            <nav>\r\n            <img src={logo} className=\"logo\" onClick={gohome}></img>\r\n            </nav>\r\n            <div className=\"space\"></div>\r\n            <div className='loginf'>\r\n            <h1 className='loginTitle'>Log into your account</h1>\r\n            <form className='loginForm' onSubmit={handleSubmit}>\r\n                <label htmlFor='email'>Email Address</label>\r\n                <br></br>\r\n                <input\r\n                    placeholder=\"examplemail@gmail.com\"\r\n                    type='text'\r\n                    name='email'\r\n                    id='email'\r\n                    onChange={handleInput}\r\n                />\r\n                <br></br>\r\n                <div className=\"break\"></div>\r\n                <label htmlFor='password'>Password</label>\r\n                <br></br>\r\n                <input\r\n                    placeholder=\"*********\"\r\n                    type='password'\r\n                    name='password'\r\n                    id='password'\r\n                    onChange={handleInput}\r\n                />\r\n                {errors.password && <span>Wrong email or password!</span>}\r\n                <br></br>\r\n                <div className=\"break\"></div>\r\n                <button className='loginBtn'>LOG IN</button>\r\n                <p>\r\n                    Don't have an account? <Link to='/register'>Create one</Link>\r\n                </p>\r\n                \r\n            </form>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\nexport default Login;","C:\\Users\\MaksD\\fullserverDUR\\client\\src\\components\\Replies.js",["72"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport logo from './images/logotranssmall.png';\r\n\r\nconst Replies = () => {\r\n    const [replyList, setReplyList] = useState([]);\r\n    const [reply, setReply] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [originator, setOriginator] = useState(\"\");\r\n    const [description, setDesc] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchReplies = () => {\r\n            fetch(\"http://localhost:8081/api/thread/replies\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    id,\r\n                }),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    setReplyList(data.replies);\r\n                    setTitle(data.title);\r\n                    setDesc(data.description);\r\n                    setOriginator(data.originator);\r\n                })\r\n                .catch((err) => console.error(err));\r\n        };\r\n        fetchReplies();\r\n    }, [id]);\r\n\r\n    //👇🏻 This function when triggered when we add a new reply\r\n    const addReply = () => {\r\n        fetch(\"http://localhost:8081/api/create/reply\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                id,\r\n                userId: localStorage.getItem(\"_id\"),\r\n                reply\r\n            }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                alert(data.message);\r\n            })\r\n            .catch((err) => console.error(err));\r\n    };\r\n    \r\n    const handleSubmitReply = (e) => {\r\n        e.preventDefault();\r\n        //👇🏻 calls the function\r\n        addReply();\r\n        setReply(\"\");\r\n        window.location.reload(true);\r\n    };\r\n\r\n    const signOut = () => {\r\n        localStorage.removeItem(\"_id\");\r\n        localStorage.removeItem(\"_name\")\r\n        window.location.reload(true);\r\n    };\r\n    const gotolog = () => {\r\n        navigate('/');\r\n    };\r\n    const gotosign = () => {\r\n        navigate('/register');\r\n    };\r\n    const goHome = () => {\r\n        navigate('/dashboard');\r\n    };\r\n    const username = localStorage.getItem(\"_name\");\r\n\r\n    return (\r\n    <main className='replies'>\r\n        <nav>\r\n                    <img src={logo} className=\"logo\" onClick={goHome}></img>\r\n                    <div className=\"navbuttons\">\r\n                    {localStorage.getItem(\"_id\") !== null && \r\n                        <button className=\"btn\" onClick={signOut}>\r\n                            SIGN OUT\r\n                        </button>\r\n                        \r\n                    }\r\n                    {username && <h1>{username}</h1>}\r\n                    {localStorage.getItem(\"_id\") === null && \r\n                        <button className=\"btn\" onClick={gotolog}>\r\n                            LOG IN\r\n                        </button>\r\n                    }\r\n                    {localStorage.getItem(\"_id\") === null && \r\n                        <button className=\"btn\" onClick={gotosign}>\r\n                            SIGN IN\r\n                        </button>\r\n                    }</div>\r\n                </nav>\r\n                <div className=\"space\"></div>\r\n        <div id='work'>\r\n        <div className=\"Content\">\r\n        <div className=\"textReplies\">\r\n        <h1 className='repliesTitle'>{title}</h1>\r\n        <p className='repliesDesc'>{description}</p>\r\n        <p className='repliesOri' style={{ opacity: \"0.5\" }}>by {originator}</p>\r\n        </div>\r\n        <div className=\"underline\"></div>\r\n        <div className=\"spacesmall\"></div>\r\n        <div className='thread__container'>\r\n            {replyList.map((reply) => (\r\n                <div className='thread__item'>\r\n                    <p>{reply.text}</p>\r\n                        <p className='react__container' style={{ opacity: \"0.5\" }}>by {reply.name}                       \r\n                        </p>\r\n                        <div className=\"underlinename\"></div>\r\n                    <div className=\"spacesmall\"></div>\r\n                </div>\r\n                \r\n            ))}\r\n        </div>\r\n        <div className=\"spacesmall\"></div>\r\n        </div>\r\n        <form className='homeForm' onSubmit={handleSubmitReply}>\r\n            <label htmlFor='reply'>Reply to the thread!</label>\r\n            <textarea\r\n                rows={5}\r\n                value={reply}\r\n                onChange={(e) => setReply(e.target.value)}\r\n                type='text'\r\n                name='reply'\r\n                className='modalInput'\r\n            />\r\n\r\n            <button className='modalBtn'>SEND</button>\r\n        </form>\r\n        </div>\r\n    </main>\r\n);\r\n};\r\n\r\n\r\nexport default Replies;","C:\\Users\\MaksD\\fullserverDUR\\client\\src\\components\\RegisterValidation.js",[],[],"C:\\Users\\MaksD\\fullserverDUR\\client\\src\\components\\LoginValidation.js",[],[],"C:\\Users\\MaksD\\fullserverDUR\\client\\src\\components\\utils\\Likes.js",["73"],[],"import React, {useState } from \"react\";\r\n\r\nconst Likes = ({ numberOfLikes, threadId }) => {\r\n\r\n    const handleLikeFunction = () => {\r\n        fetch(\"http://localhost:8081/api/thread/like\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                threadId,\r\n                userId: localStorage.getItem(\"_id\"),\r\n            }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                \r\n            })\r\n            .catch((err) => console.error(err));\r\n\r\n            window.location.reload(true);\r\n        };\r\n\r\n    return (\r\n        <div className='LikesCont'>\r\n            <svg\r\n                style= {{color: 'black'}}\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                viewBox='0 0 24 24'\r\n                fill='currentColor'\r\n                className='w-4 h-4 likesBtn'\r\n                onClick={handleLikeFunction}>\r\n                <path d='M7.493 18.75c-.425 0-.82-.236-.975-.632A7.48 7.48 0 016 15.375c0-1.75.599-3.358 1.602-4.634.151-.192.373-.309.6-.397.473-.183.89-.514 1.212-.924a9.042 9.042 0 012.861-2.4c.723-.384 1.35-.956 1.653-1.715a4.498 4.498 0 00.322-1.672V3a.75.75 0 01.75-.75 2.25 2.25 0 012.25 2.25c0 1.152-.26 2.243-.723 3.218-.266.558.107 1.282.725 1.282h3.126c1.026 0 1.945.694 2.054 1.715.045.422.068.85.068 1.285a11.95 11.95 0 01-2.649 7.521c-.388.482-.987.729-1.605.729H14.23c-.483 0-.964-.078-1.423-.23l-3.114-1.04a4.501 4.501 0 00-1.423-.23h-.777zM2.331 10.977a11.969 11.969 0 00-.831 4.398 12 12 0 00.52 3.507c.26.85 1.084 1.368 1.973 1.368H4.9c.445 0 .72-.498.523-.898a8.963 8.963 0 01-.924-3.977c0-1.708.476-3.305 1.302-4.666.245-.403-.028-.959-.5-.959H4.25c-.832 0-1.612.453-1.918 1.227z' />\r\n            </svg>\r\n            <p>\r\n                {numberOfLikes}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Likes;","C:\\Users\\MaksD\\fullserverDUR\\client\\src\\components\\utils\\Comments.js",[],[],{"ruleId":"74","severity":1,"message":"75","line":50,"column":13,"nodeType":"76","endLine":50,"endColumn":63},{"ruleId":"77","severity":1,"message":"78","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":85,"column":21,"nodeType":"76","endLine":85,"endColumn":54},{"ruleId":"74","severity":1,"message":"75","line":59,"column":13,"nodeType":"76","endLine":59,"endColumn":63},{"ruleId":"74","severity":1,"message":"75","line":84,"column":21,"nodeType":"76","endLine":84,"endColumn":71},{"ruleId":"77","severity":1,"message":"81","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":24},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used."]