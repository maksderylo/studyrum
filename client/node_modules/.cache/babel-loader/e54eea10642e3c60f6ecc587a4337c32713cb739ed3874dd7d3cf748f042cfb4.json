{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MaksD\\\\fullserverDUR\\\\client\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log({\n      username,\n      email,\n      password\n    });\n    setEmail(\"\");\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"zdjlogo.img\",\n        class: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"space\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"registerf\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"registerTitle\",\n        children: \"Create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"registerForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          id: \"username\",\n          required: true,\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          id: \"email\",\n          required: true,\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          required: true,\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onlick: \"handlesubmit()\",\n          className: \"registerBtn\",\n          children: \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"qXzfcSnOp7L14Dddg986jK2+oO8=\");\n_c = Register;\nexport default Register;\nconst signUp = () => {\n  fetch(\"http://localhost:4000/api/register\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      email,\n      password,\n      username\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => res.json()).then(data => {\n    console.log(data);\n  }).catch(err => console.error(err));\n};\nconst handleSubmit = e => {\n  e.preventDefault();\n  //👇🏻 Triggers the function\n  signUp();\n  setEmail(\"\");\n  setUsername(\"\");\n  setPassword(\"\");\n};\napp.post(\"/api/register\", async (req, res) => {\n  const {\n    email,\n    password,\n    username\n  } = req.body;\n  const id = generateID();\n  //👇🏻 ensures there is no existing user with the same credentials\n  const result = users.filter(user => user.email === email && user.password === password);\n  //👇🏻 if true\n  if (result.length === 0) {\n    const newUser = {\n      id,\n      email,\n      password,\n      username\n    };\n    //👇🏻 adds the user to the database (array)\n    users.push(newUser);\n    //👇🏻 returns a success message\n    return res.json({\n      message: \"Account created successfully!\"\n    });\n  }\n  //👇🏻 if there is an existing user\n  res.json({\n    error_message: \"User already exists\"\n  });\n});\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Register","_s","username","setUsername","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","console","log","className","children","src","class","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","name","id","required","value","onChange","target","onlick","to","_c","signUp","fetch","method","body","JSON","stringify","headers","then","res","json","data","catch","err","error","app","post","req","generateID","result","users","filter","user","length","newUser","push","message","error_message","$RefreshReg$"],"sources":["C:/Users/MaksD/fullserverDUR/client/src/components/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Register = () => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log({ username, email, password });\r\n        setEmail(\"\");\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n    };\r\n    return (\r\n        <main className='register'>\r\n            <nav>\r\n                <img src=\"zdjlogo.img\" class=\"logo\"></img>\r\n            </nav>\r\n            <div class=\"space\"></div>\r\n            <div class='registerf'>\r\n                \r\n            <h1 className='registerTitle'>Create an account</h1>\r\n            <form className='registerForm' onSubmit={handleSubmit}>\r\n                <label htmlFor='username'>Username</label>\r\n                <input\r\n                    type='text'\r\n                    name='username'\r\n                    id='username'\r\n                    required\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <br></br>\r\n                <label htmlFor='email'>Email Address</label>\r\n                <input\r\n                    type='text'\r\n                    name='email'\r\n                    id='email'\r\n                    required\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <label htmlFor='password'>Password</label>\r\n                <input\r\n                    type='password'\r\n                    name='password'\r\n                    id='password'\r\n                    required\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <button onlick=\"handlesubmit()\" className='registerBtn'>REGISTER</button>\r\n                <p>\r\n                    Have an account? <Link to='/'>Sign in</Link>\r\n                </p>\r\n            </form>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n\r\nconst signUp = () => {\r\n    fetch(\"http://localhost:4000/api/register\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            email,\r\n            password,\r\n            username,\r\n        }),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            console.log(data);\r\n        })\r\n        .catch((err) => console.error(err));\r\n};\r\n\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //👇🏻 Triggers the function\r\n    signUp();\r\n    setEmail(\"\");\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n};\r\n\r\napp.post(\"/api/register\", async (req, res) => {\r\n    const { email, password, username } = req.body;\r\n    const id = generateID();\r\n    //👇🏻 ensures there is no existing user with the same credentials\r\n    const result = users.filter(\r\n        (user) => user.email === email && user.password === password\r\n    );\r\n    //👇🏻 if true\r\n    if (result.length === 0) {\r\n        const newUser = { id, email, password, username };\r\n        //👇🏻 adds the user to the database (array)\r\n        users.push(newUser);\r\n        //👇🏻 returns a success message\r\n        return res.json({\r\n            message: \"Account created successfully!\",\r\n        });\r\n    }\r\n    //👇🏻 if there is an existing user\r\n    res.json({\r\n        error_message: \"User already exists\",\r\n    });\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}