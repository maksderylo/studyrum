{"ast":null,"code":"function validation(values) {\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,20}$/;\n  if (values.name === \"\") {\n    error.name = \"Username should not be empty!\";\n  }\n  if (values.email === \"\") {\n    error.email = \"Email should not be empty!\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Write email in a correct formula!\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = \"Password should not be empty!\";\n  } else if (!password_pattern.test(values.password)) {\n    error.password = \"Write password in a corrent formula!\";\n  } else {\n    error.password = \"\";\n  }\n  if (values.password === values.confpassword) {\n    error.confpassword = \"Passwords not matching!\";\n  }\n  return error;\n}\nexport default validation;","map":{"version":3,"names":["validation","values","error","email_pattern","password_pattern","name","email","test","password","confpassword"],"sources":["C:/Users/MaksD/fullserverDUR/client/src/components/RegisterValidation.js"],"sourcesContent":["function validation(values) {\r\n    let error = {}\r\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,20}$/\r\n\r\n    if (values.name ===\"\"){\r\n        error.name = \"Username should not be empty!\"\r\n    }\r\n\r\n    if (values.email ===\"\"){\r\n        error.email = \"Email should not be empty!\"\r\n    }\r\n    else if(!email_pattern.test(values.email)){\r\n        error.email = \"Write email in a correct formula!\"\r\n    }\r\n    else{\r\n        error.email = \"\"\r\n    }\r\n\r\n    if (values.password ===\"\"){\r\n        error.password= \"Password should not be empty!\"\r\n    }\r\n    else if(!password_pattern.test(values.password)){\r\n        error.password = \"Write password in a corrent formula!\"\r\n    }\r\n    else{\r\n        error.password = \"\"\r\n    }\r\n\r\n    if(values.password === values.confpassword){\r\n        error.confpassword = \"Passwords not matching!\"\r\n    }\r\n\r\n    return error;\r\n}\r\n\r\nexport default validation"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAE;EACxB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAG,mDAAmD;EAE5E,IAAIH,MAAM,CAACI,IAAI,KAAI,EAAE,EAAC;IAClBH,KAAK,CAACG,IAAI,GAAG,+BAA+B;EAChD;EAEA,IAAIJ,MAAM,CAACK,KAAK,KAAI,EAAE,EAAC;IACnBJ,KAAK,CAACI,KAAK,GAAG,4BAA4B;EAC9C,CAAC,MACI,IAAG,CAACH,aAAa,CAACI,IAAI,CAACN,MAAM,CAACK,KAAK,CAAC,EAAC;IACtCJ,KAAK,CAACI,KAAK,GAAG,mCAAmC;EACrD,CAAC,MACG;IACAJ,KAAK,CAACI,KAAK,GAAG,EAAE;EACpB;EAEA,IAAIL,MAAM,CAACO,QAAQ,KAAI,EAAE,EAAC;IACtBN,KAAK,CAACM,QAAQ,GAAE,+BAA+B;EACnD,CAAC,MACI,IAAG,CAACJ,gBAAgB,CAACG,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,EAAC;IAC5CN,KAAK,CAACM,QAAQ,GAAG,sCAAsC;EAC3D,CAAC,MACG;IACAN,KAAK,CAACM,QAAQ,GAAG,EAAE;EACvB;EAEA,IAAGP,MAAM,CAACO,QAAQ,KAAKP,MAAM,CAACQ,YAAY,EAAC;IACvCP,KAAK,CAACO,YAAY,GAAG,yBAAyB;EAClD;EAEA,OAAOP,KAAK;AAChB;AAEA,eAAeF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}