{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MaksD\\\\fullserverDUR\\\\client\\\\src\\\\components\\\\Replies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Replies = () => {\n  _s();\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchReplies = () => {\n      fetch(\"http://localhost:8081/api/thread/replies\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          id\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        setReplyList(data.replies);\n        setTitle(data.title);\n      }).catch(err => console.error(err));\n    };\n    fetchReplies();\n  }, [id]);\n\n  //üëáüèª This function when triggered when we add a new reply\n  const addReply = () => {\n    fetch(\"http://localhost:8081/api/create/reply\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        id,\n        userId: localStorage.getItem(\"_id\"),\n        reply\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      alert(data.message);\n      navigate(\"/dashboard\");\n    }).catch(err => console.error(err));\n  };\n  const handleSubmitReply = e => {\n    e.preventDefault();\n    //üëáüèª calls the function\n    addReply();\n    setReply(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"replies\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"repliesTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"modal__content\",\n      onSubmit: handleSubmitReply,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"reply\",\n        children: \"Reply to the thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 5,\n        value: reply,\n        onChange: e => setReply(e.target.value),\n        type: \"text\",\n        name: \"reply\",\n        className: \"modalInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modalBtn\",\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread__container\",\n      children: replyList.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"react__container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              opacity: \"0.5\"\n            },\n            children: [\"by \", reply.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Replies, \"Japo58YJkeqPvLNHttw1ro5ENhQ=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Replies;\nexport default Replies;\nvar _c;\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","Replies","_s","replyList","setReplyList","reply","setReply","title","setTitle","navigate","id","fetchReplies","fetch","method","body","JSON","stringify","headers","then","res","json","data","replies","catch","err","console","error","addReply","userId","localStorage","getItem","alert","message","handleSubmitReply","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","rows","value","onChange","target","type","name","map","text","style","opacity","_c","$RefreshReg$"],"sources":["C:/Users/MaksD/fullserverDUR/client/src/components/Replies.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst Replies = () => {\r\n    const [replyList, setReplyList] = useState([]);\r\n    const [reply, setReply] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchReplies = () => {\r\n            fetch(\"http://localhost:8081/api/thread/replies\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    id,\r\n                }),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    setReplyList(data.replies);\r\n                    setTitle(data.title);\r\n                })\r\n                .catch((err) => console.error(err));\r\n        };\r\n        fetchReplies();\r\n    }, [id]);\r\n\r\n    //üëáüèª This function when triggered when we add a new reply\r\n    const addReply = () => {\r\n        fetch(\"http://localhost:8081/api/create/reply\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                id,\r\n                userId: localStorage.getItem(\"_id\"),\r\n                reply\r\n            }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                alert(data.message);\r\n                navigate(\"/dashboard\");\r\n            })\r\n            .catch((err) => console.error(err));\r\n    };\r\n    \r\n    const handleSubmitReply = (e) => {\r\n        e.preventDefault();\r\n        //üëáüèª calls the function\r\n        addReply();\r\n        setReply(\"\");\r\n    };\r\n\r\n\r\n    return (\r\n    <main className='replies'>\r\n        <h1 className='repliesTitle'>{title}</h1>\r\n\r\n        <form className='modal__content' onSubmit={handleSubmitReply}>\r\n            <label htmlFor='reply'>Reply to the thread</label>\r\n            <textarea\r\n                rows={5}\r\n                value={reply}\r\n                onChange={(e) => setReply(e.target.value)}\r\n                type='text'\r\n                name='reply'\r\n                className='modalInput'\r\n            />\r\n\r\n            <button className='modalBtn'>SEND</button>\r\n        </form>\r\n\r\n        <div className='thread__container'>\r\n            {replyList.map((reply) => (\r\n                <div className='thread__item'>\r\n                    <p>{reply.text}</p>\r\n                    <div className='react__container'>\r\n                        <p style={{ opacity: \"0.5\" }}>by {reply.name}</p>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    </main>\r\n);\r\n};\r\n\r\n\r\n\r\nexport default Replies;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}