{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MaksD\\\\fullserverDUR\\\\client\\\\src\\\\components\\\\Replies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Replies = () => {\n  _s();\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchReplies = () => {\n      fetch(\"http://localhost:4000/api/thread/replies\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          id\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        setReplyList(data.replies);\n        setTitle(data.title);\n      }).catch(err => console.error(err));\n    };\n    fetchReplies();\n  }, [id]);\n\n  //👇🏻 This function when triggered when we add a new reply\n  const handleSubmitReply = e => {\n    e.preventDefault();\n    console.log({\n      reply\n    });\n    setReply(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"replies\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"modal__content\",\n      onSubmit: handleSubmitReply,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"reply\",\n        children: \"Reply to the thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 5,\n        value: reply,\n        onChange: e => setReply(e.target.value),\n        type: \"text\",\n        name: \"reply\",\n        className: \"modalInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modalBtn\",\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Replies, \"Japo58YJkeqPvLNHttw1ro5ENhQ=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Replies;\nexport default Replies;\nvar _c;\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","Replies","_s","replyList","setReplyList","reply","setReply","title","setTitle","navigate","id","fetchReplies","fetch","method","body","JSON","stringify","headers","then","res","json","data","replies","catch","err","console","error","handleSubmitReply","e","preventDefault","log","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","rows","value","onChange","target","type","name","_c","$RefreshReg$"],"sources":["C:/Users/MaksD/fullserverDUR/client/src/components/Replies.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst Replies = () => {\r\n    const [replyList, setReplyList] = useState([]);\r\n    const [reply, setReply] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchReplies = () => {\r\n            fetch(\"http://localhost:4000/api/thread/replies\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    id,\r\n                }),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    setReplyList(data.replies);\r\n                    setTitle(data.title);\r\n                })\r\n                .catch((err) => console.error(err));\r\n        };\r\n        fetchReplies();\r\n    }, [id]);\r\n\r\n    //👇🏻 This function when triggered when we add a new reply\r\n    const handleSubmitReply = (e) => {\r\n        e.preventDefault();\r\n        console.log({ reply });\r\n        setReply(\"\");\r\n    };\r\n\r\n    \r\n    return (\r\n        <main className='replies'>\r\n            <form className='modal__content' onSubmit={handleSubmitReply}>\r\n                <label htmlFor='reply'>Reply to the thread</label>\r\n                <textarea\r\n                    rows={5}\r\n                    value={reply}\r\n                    onChange={(e) => setReply(e.target.value)}\r\n                    type='text'\r\n                    name='reply'\r\n                    className='modalInput'\r\n                />\r\n    \r\n                <button className='modalBtn'>SEND</button>\r\n            </form>\r\n        </main>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Replies;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}